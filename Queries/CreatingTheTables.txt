CREATE TABLE Class (
    Class_ID INT PRIMARY KEY,
    Section VARCHAR(10)
);

CREATE TABLE Student (
    Student_ID INT PRIMARY KEY,
    Name VARCHAR(20),
    Date_Of_Birth DATE,
    Gender VARCHAR(10),
    Password VARCHAR(20),
    Class_ID INT,
    FOREIGN KEY (Class_ID) REFERENCES Class(Class_ID)
);

CREATE TABLE Guardian (
    Guardian_ID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(20),
    Phone VARCHAR(15),
    Address VARCHAR(30),
    Email VARCHAR(30)
);

CREATE TABLE Guardian_Student (
    Student_ID INT,
    Guardian_ID INT,
    Relation_Type VARCHAR(20),
    PRIMARY KEY (Student_ID, Guardian_ID),
    FOREIGN KEY (Student_ID) REFERENCES Student(Student_ID),
    FOREIGN KEY (Guardian_ID) REFERENCES Guardian(Guardian_ID)
);

CREATE TABLE Test (
    Test_ID INT PRIMARY KEY AUTO_INCREMENT,
    Test_Type VARCHAR(20),
    Date_Of_Test DATE,
    Max_Marks INT
);

CREATE TABLE Student_Score (
    Student_ID INT,
    Test_ID INT,
    Marks_Obtained DECIMAL(5,2),
    PRIMARY KEY (Student_ID, Test_ID),
    FOREIGN KEY (Student_ID) REFERENCES Student(Student_ID),
    FOREIGN KEY (Test_ID) REFERENCES Test(Test_ID)
);

CREATE TABLE Subject (
    Subject_ID INT PRIMARY KEY AUTO_INCREMENT,
    Subject_Name VARCHAR(50)
);

CREATE TABLE Attendance (
    Student_ID INT,
    Subject_ID INT,
    Classes_Done INT,
    Classes_Attended INT,
    PRIMARY KEY (Student_ID, Subject_ID),
    FOREIGN KEY (Student_ID) REFERENCES Student(Student_ID),
    FOREIGN KEY (Subject_ID) REFERENCES Subject(Subject_ID)
);

CREATE TABLE Fees (
    Fee_ID int PRIMARY KEY AUTO_INCREMENT,
    Student_ID int,
    Fees_Type varchar(30),
    Amount int,
    Status varchar(10) check (Status in ('Pending', 'Paid')),
    Due_Date date
);

CREATE TABLE Teacher (
    Teacher_ID int PRIMARY KEY,
    Name varchar(50),
    Date_Of_Birth date,
    Email varchar(30),
    Phone varchar(15),
    Password varchar(20)
);

CREATE TABLE Inventory (
    Item_ID int PRIMARY KEY Auto_Increment,
    Item_Name varchar(30),
    Quantity int
);
  
CREATE TABLE Teacher_Subject (
   Teacher_ID int,
   Subject_ID int,
   PRIMARY KEY (Teacher_ID,Subject_ID),
   FOREIGN KEY (Teacher_ID) REFERENCES Teacher(Teacher_ID),
   FOREIGN KEY (Subject_ID) REFERENCES Subject(Subject_ID)
);



CREATE TABLE Teacher_Class (
   Teacher_ID int,
   Class_ID int,
   PRIMARY KEY (Teacher_ID,Class_ID),
   FOREIGN KEY (Teacher_ID) REFERENCES Teacher(Teacher_ID),
   FOREIGN KEY (Class_ID) REFERENCES Class(Class_ID)
);

CREATE TABLE Department (
    Dept_ID int PRIMARY KEY,
    Name varchar(20)
);

ALTER Table Subject ADD COLUMN Dept_ID int;
ALTER TABLE Subject ADD CONSTRAINT fk_Const FOREIGN KEY(Dept_ID) REFERENCES Department(Dept_ID);

CREATE TABLE Classroom (
    Classroom_ID int PRIMARY KEY,
    Room_No int,
    Capacity int
);

CREATE TABLE Classroom_Allotment (
    Class_ID int,
    Classroom_ID int,
    PRIMARY KEY(Class_ID,Classroom_ID),
    FOREIGN KEY (Class_ID) REFERENCES Class(Class_ID),
    FOREIGN KEY (Classroom_ID) REFERENCES Classroom(Classroom_ID)
);

CREATE TABLE Admin (
   Admin_ID int primary key auto_increment,
   Name varchar(30),
   Email varchar(30),
   Phone varchar(15),
   Password varchar(30)
);

CREATE TABLE Book (
    Book_ID int PRIMARY KEY,
    Title varchar(30),
    Author varchar(20),
    Quantity int
);

CREATE TABLE Book_Issue(
    Student_ID int,
    Book_ID int,
    Issue_Date date,
    PRIMARY KEY (Student_ID,Book_ID),
    FOREIGN KEY (Student_ID) REFERENCES Student(Student_ID),
    FOREIGN KEY (Book_ID) REFERENCES Book(Book_ID)
);

CREATE TABLE Timetable (
    Timetable_ID INT AUTO_INCREMENT PRIMARY KEY,
    Teacher_ID INT NOT NULL,
    Subject_ID INT NOT NULL,
    Class_ID INT NOT NULL,
    Day_Of_Week VARCHAR(10) NOT NULL,
    Start_Time TIME NOT NULL,
    End_Time TIME NOT NULL,
    FOREIGN KEY (Teacher_ID) REFERENCES Teacher(Teacher_ID),
    FOREIGN KEY (Subject_ID) REFERENCES Subject(Subject_ID),
    FOREIGN KEY (Class_ID) REFERENCES class(Class_ID)
);

CREATE TABLE Test_Subject (
    Test_ID int,
    Subject_ID int,
    PRIMARY KEY (Test_ID,Subject_ID),
    FOREIGN KEY (Test_ID) REFERENCES Test(Test_ID),
    FOREIGN KEY (Subject_ID) REFERENCES Subject(Subject_ID)
);


